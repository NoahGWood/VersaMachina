# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

RESCOMP = windres
DEFINES +=
INCLUDES += -ISPIRV_Cross -ISPIRV_Cross/include -Iglm
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -fPIC
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -fPIC
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LIBS +=
LDDEPS +=
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s
LINKCMD = $(AR) -rcs "$@" $(OBJECTS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug)
TARGETDIR = ../../bin/Debug-linux-x86_64/SPIRV_Cross
TARGET = $(TARGETDIR)/libSPIRV_Cross.a
OBJDIR = ../../build/Debug-linux-x86_64/SPIRV_Cross

else ifeq ($(config),release)
TARGETDIR = ../../bin/Release-linux-x86_64/SPIRV_Cross
TARGET = $(TARGETDIR)/libSPIRV_Cross.a
OBJDIR = ../../build/Release-linux-x86_64/SPIRV_Cross

else ifeq ($(config),dist)
TARGETDIR = ../../bin/Dist-linux-x86_64/SPIRV_Cross
TARGET = $(TARGETDIR)/libSPIRV_Cross.a
OBJDIR = ../../build/Dist-linux-x86_64/SPIRV_Cross

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/atomics.o
GENERATED += $(OBJDIR)/c_api_test.o
GENERATED += $(OBJDIR)/hlsl_resource_bindings.o
GENERATED += $(OBJDIR)/hlsl_wave_mask.o
GENERATED += $(OBJDIR)/main.o
GENERATED += $(OBJDIR)/msl_constexpr_test.o
GENERATED += $(OBJDIR)/msl_resource_bindings.o
GENERATED += $(OBJDIR)/msl_ycbcr_conversion_test.o
GENERATED += $(OBJDIR)/multiply.o
GENERATED += $(OBJDIR)/shared.o
GENERATED += $(OBJDIR)/small_vector.o
GENERATED += $(OBJDIR)/spirv_cfg.o
GENERATED += $(OBJDIR)/spirv_cpp.o
GENERATED += $(OBJDIR)/spirv_cross.o
GENERATED += $(OBJDIR)/spirv_cross_c.o
GENERATED += $(OBJDIR)/spirv_cross_parsed_ir.o
GENERATED += $(OBJDIR)/spirv_cross_util.o
GENERATED += $(OBJDIR)/spirv_glsl.o
GENERATED += $(OBJDIR)/spirv_hlsl.o
GENERATED += $(OBJDIR)/spirv_msl.o
GENERATED += $(OBJDIR)/spirv_parser.o
GENERATED += $(OBJDIR)/spirv_reflect.o
GENERATED += $(OBJDIR)/typed_id_test.o
OBJECTS += $(OBJDIR)/atomics.o
OBJECTS += $(OBJDIR)/c_api_test.o
OBJECTS += $(OBJDIR)/hlsl_resource_bindings.o
OBJECTS += $(OBJDIR)/hlsl_wave_mask.o
OBJECTS += $(OBJDIR)/main.o
OBJECTS += $(OBJDIR)/msl_constexpr_test.o
OBJECTS += $(OBJDIR)/msl_resource_bindings.o
OBJECTS += $(OBJDIR)/msl_ycbcr_conversion_test.o
OBJECTS += $(OBJDIR)/multiply.o
OBJECTS += $(OBJDIR)/shared.o
OBJECTS += $(OBJDIR)/small_vector.o
OBJECTS += $(OBJDIR)/spirv_cfg.o
OBJECTS += $(OBJDIR)/spirv_cpp.o
OBJECTS += $(OBJDIR)/spirv_cross.o
OBJECTS += $(OBJDIR)/spirv_cross_c.o
OBJECTS += $(OBJDIR)/spirv_cross_parsed_ir.o
OBJECTS += $(OBJDIR)/spirv_cross_util.o
OBJECTS += $(OBJDIR)/spirv_glsl.o
OBJECTS += $(OBJDIR)/spirv_hlsl.o
OBJECTS += $(OBJDIR)/spirv_msl.o
OBJECTS += $(OBJDIR)/spirv_parser.o
OBJECTS += $(OBJDIR)/spirv_reflect.o
OBJECTS += $(OBJDIR)/typed_id_test.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking SPIRV_Cross
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning SPIRV_Cross
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) del /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CC) -x c-header $(ALL_CFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/main.o: SPIRV_Cross/main.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/atomics.o: SPIRV_Cross/samples/cpp/atomics.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/multiply.o: SPIRV_Cross/samples/cpp/multiply.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/shared.o: SPIRV_Cross/samples/cpp/shared.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/spirv_cfg.o: SPIRV_Cross/spirv_cfg.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/spirv_cpp.o: SPIRV_Cross/spirv_cpp.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/spirv_cross.o: SPIRV_Cross/spirv_cross.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/spirv_cross_c.o: SPIRV_Cross/spirv_cross_c.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/spirv_cross_parsed_ir.o: SPIRV_Cross/spirv_cross_parsed_ir.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/spirv_cross_util.o: SPIRV_Cross/spirv_cross_util.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/spirv_glsl.o: SPIRV_Cross/spirv_glsl.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/spirv_hlsl.o: SPIRV_Cross/spirv_hlsl.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/spirv_msl.o: SPIRV_Cross/spirv_msl.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/spirv_parser.o: SPIRV_Cross/spirv_parser.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/spirv_reflect.o: SPIRV_Cross/spirv_reflect.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/c_api_test.o: SPIRV_Cross/tests-other/c_api_test.c
	@echo "$(notdir $<)"
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/hlsl_resource_bindings.o: SPIRV_Cross/tests-other/hlsl_resource_bindings.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/hlsl_wave_mask.o: SPIRV_Cross/tests-other/hlsl_wave_mask.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/msl_constexpr_test.o: SPIRV_Cross/tests-other/msl_constexpr_test.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/msl_resource_bindings.o: SPIRV_Cross/tests-other/msl_resource_bindings.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/msl_ycbcr_conversion_test.o: SPIRV_Cross/tests-other/msl_ycbcr_conversion_test.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/small_vector.o: SPIRV_Cross/tests-other/small_vector.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/typed_id_test.o: SPIRV_Cross/tests-other/typed_id_test.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif