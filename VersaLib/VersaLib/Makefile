# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

RESCOMP = windres
INCLUDES += -I../include -I../platforms -I../vendor/spdlog/include -I../vendor/glad/include -I../vendor/imgui -I../vendor/glm -I../vendor/stb_image -I../vendor/EnTT/include -I../vendor/yaml-cpp/include -I../vendor/tinyfiledialogs -I../vendor/ImGuizmo
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LINKCMD = $(AR) -rcs "$@" $(OBJECTS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug)
TARGETDIR = ../../bin/Debug-linux-x86_64/VersaLib
TARGET = $(TARGETDIR)/libVersaLib.a
OBJDIR = ../../build/Debug-linux-x86_64/VersaLib
DEFINES += -D_CRT_SECURE_NO_WARNINGS -DVM_PLATFORM_LINUX -DVM_DEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=c++2a
LIBS += ../../bin/Debug-linux-x86_64/Glad/libGlad.a ../../bin/Debug-linux-x86_64/ImGui/libImGui.a ../../bin/Debug-linux-x86_64/yaml/libyaml.a ../../bin/Debug-linux-x86_64/tinyfiledialogs/libtinyfiledialogs.a ../../bin/Debug-linux-x86_64/ImGuizmo/libImGuizmo.a -lglfw
LDDEPS += ../../bin/Debug-linux-x86_64/Glad/libGlad.a ../../bin/Debug-linux-x86_64/ImGui/libImGui.a ../../bin/Debug-linux-x86_64/yaml/libyaml.a ../../bin/Debug-linux-x86_64/tinyfiledialogs/libtinyfiledialogs.a ../../bin/Debug-linux-x86_64/ImGuizmo/libImGuizmo.a
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64

else ifeq ($(config),release)
TARGETDIR = ../../bin/Release-linux-x86_64/VersaLib
TARGET = $(TARGETDIR)/libVersaLib.a
OBJDIR = ../../build/Release-linux-x86_64/VersaLib
DEFINES += -D_CRT_SECURE_NO_WARNINGS -DVM_PLATFORM_LINUX -DVM_RELEASE
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++2a
LIBS += ../../bin/Release-linux-x86_64/Glad/libGlad.a ../../bin/Release-linux-x86_64/ImGui/libImGui.a ../../bin/Release-linux-x86_64/yaml/libyaml.a ../../bin/Release-linux-x86_64/tinyfiledialogs/libtinyfiledialogs.a ../../bin/Release-linux-x86_64/ImGuizmo/libImGuizmo.a -lglfw
LDDEPS += ../../bin/Release-linux-x86_64/Glad/libGlad.a ../../bin/Release-linux-x86_64/ImGui/libImGui.a ../../bin/Release-linux-x86_64/yaml/libyaml.a ../../bin/Release-linux-x86_64/tinyfiledialogs/libtinyfiledialogs.a ../../bin/Release-linux-x86_64/ImGuizmo/libImGuizmo.a
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s

else ifeq ($(config),dist)
TARGETDIR = ../../bin/Dist-linux-x86_64/VersaLib
TARGET = $(TARGETDIR)/libVersaLib.a
OBJDIR = ../../build/Dist-linux-x86_64/VersaLib
DEFINES += -D_CRT_SECURE_NO_WARNINGS -DVM_PLATFORM_LINUX -DVM_DIST
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++2a
LIBS += ../../bin/Dist-linux-x86_64/Glad/libGlad.a ../../bin/Dist-linux-x86_64/ImGui/libImGui.a ../../bin/Dist-linux-x86_64/yaml/libyaml.a ../../bin/Dist-linux-x86_64/tinyfiledialogs/libtinyfiledialogs.a ../../bin/Dist-linux-x86_64/ImGuizmo/libImGuizmo.a -lglfw
LDDEPS += ../../bin/Dist-linux-x86_64/Glad/libGlad.a ../../bin/Dist-linux-x86_64/ImGui/libImGui.a ../../bin/Dist-linux-x86_64/yaml/libyaml.a ../../bin/Dist-linux-x86_64/tinyfiledialogs/libtinyfiledialogs.a ../../bin/Dist-linux-x86_64/ImGuizmo/libImGuizmo.a
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/Application.o
GENERATED += $(OBJDIR)/Camera.o
GENERATED += $(OBJDIR)/EditorCamera.o
GENERATED += $(OBJDIR)/Entity.o
GENERATED += $(OBJDIR)/Framebuffer.o
GENERATED += $(OBJDIR)/ImGUIBuild.o
GENERATED += $(OBJDIR)/ImGUILayer.o
GENERATED += $(OBJDIR)/IndexBuffer.o
GENERATED += $(OBJDIR)/Layer.o
GENERATED += $(OBJDIR)/LayerStack.o
GENERATED += $(OBJDIR)/Log.o
GENERATED += $(OBJDIR)/Math.o
GENERATED += $(OBJDIR)/OpenGLBuffer.o
GENERATED += $(OBJDIR)/OpenGLFramebuffer.o
GENERATED += $(OBJDIR)/OpenGLInput.o
GENERATED += $(OBJDIR)/OpenGLRenderContext.o
GENERATED += $(OBJDIR)/OpenGLRendererAPI.o
GENERATED += $(OBJDIR)/OpenGLShader.o
GENERATED += $(OBJDIR)/OpenGLTexture.o
GENERATED += $(OBJDIR)/OpenGLVertexArray.o
GENERATED += $(OBJDIR)/OpenGLWindow.o
GENERATED += $(OBJDIR)/RenderCommand.o
GENERATED += $(OBJDIR)/RenderContext.o
GENERATED += $(OBJDIR)/Renderer.o
GENERATED += $(OBJDIR)/Renderer2D.o
GENERATED += $(OBJDIR)/RendererAPI.o
GENERATED += $(OBJDIR)/Scene.o
GENERATED += $(OBJDIR)/SceneSerializer.o
GENERATED += $(OBJDIR)/Shader.o
GENERATED += $(OBJDIR)/ShaderLibrary.o
GENERATED += $(OBJDIR)/Texture.o
GENERATED += $(OBJDIR)/VertexArray.o
GENERATED += $(OBJDIR)/VertexBuffer.o
GENERATED += $(OBJDIR)/pch.o
GENERATED += $(OBJDIR)/stb_image.o
OBJECTS += $(OBJDIR)/Application.o
OBJECTS += $(OBJDIR)/Camera.o
OBJECTS += $(OBJDIR)/EditorCamera.o
OBJECTS += $(OBJDIR)/Entity.o
OBJECTS += $(OBJDIR)/Framebuffer.o
OBJECTS += $(OBJDIR)/ImGUIBuild.o
OBJECTS += $(OBJDIR)/ImGUILayer.o
OBJECTS += $(OBJDIR)/IndexBuffer.o
OBJECTS += $(OBJDIR)/Layer.o
OBJECTS += $(OBJDIR)/LayerStack.o
OBJECTS += $(OBJDIR)/Log.o
OBJECTS += $(OBJDIR)/Math.o
OBJECTS += $(OBJDIR)/OpenGLBuffer.o
OBJECTS += $(OBJDIR)/OpenGLFramebuffer.o
OBJECTS += $(OBJDIR)/OpenGLInput.o
OBJECTS += $(OBJDIR)/OpenGLRenderContext.o
OBJECTS += $(OBJDIR)/OpenGLRendererAPI.o
OBJECTS += $(OBJDIR)/OpenGLShader.o
OBJECTS += $(OBJDIR)/OpenGLTexture.o
OBJECTS += $(OBJDIR)/OpenGLVertexArray.o
OBJECTS += $(OBJDIR)/OpenGLWindow.o
OBJECTS += $(OBJDIR)/RenderCommand.o
OBJECTS += $(OBJDIR)/RenderContext.o
OBJECTS += $(OBJDIR)/Renderer.o
OBJECTS += $(OBJDIR)/Renderer2D.o
OBJECTS += $(OBJDIR)/RendererAPI.o
OBJECTS += $(OBJDIR)/Scene.o
OBJECTS += $(OBJDIR)/SceneSerializer.o
OBJECTS += $(OBJDIR)/Shader.o
OBJECTS += $(OBJDIR)/ShaderLibrary.o
OBJECTS += $(OBJDIR)/Texture.o
OBJECTS += $(OBJDIR)/VertexArray.o
OBJECTS += $(OBJDIR)/VertexBuffer.o
OBJECTS += $(OBJDIR)/pch.o
OBJECTS += $(OBJDIR)/stb_image.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking VersaLib
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning VersaLib
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) del /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/OpenGLBuffer.o: ../platforms/OpenGL/src/OpenGLBuffer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLFramebuffer.o: ../platforms/OpenGL/src/OpenGLFramebuffer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLInput.o: ../platforms/OpenGL/src/OpenGLInput.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLRenderContext.o: ../platforms/OpenGL/src/OpenGLRenderContext.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLRendererAPI.o: ../platforms/OpenGL/src/OpenGLRendererAPI.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLShader.o: ../platforms/OpenGL/src/OpenGLShader.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLTexture.o: ../platforms/OpenGL/src/OpenGLTexture.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLVertexArray.o: ../platforms/OpenGL/src/OpenGLVertexArray.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLWindow.o: ../platforms/OpenGL/src/OpenGLWindow.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Camera.o: ../src/Camera/Camera.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/EditorCamera.o: ../src/Camera/EditorCamera.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Application.o: ../src/Core/Application.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Layer.o: ../src/Core/Layer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/LayerStack.o: ../src/Core/LayerStack.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Log.o: ../src/Core/Log.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Entity.o: ../src/ECS/Entity.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Scene.o: ../src/ECS/Scene.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SceneSerializer.o: ../src/ECS/SceneSerializer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Math.o: ../src/Math/Math.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Framebuffer.o: ../src/Render/Framebuffer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/IndexBuffer.o: ../src/Render/IndexBuffer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/RenderCommand.o: ../src/Render/RenderCommand.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/RenderContext.o: ../src/Render/RenderContext.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Renderer.o: ../src/Render/Renderer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Renderer2D.o: ../src/Render/Renderer2D.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/RendererAPI.o: ../src/Render/RendererAPI.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Shader.o: ../src/Render/Shader.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ShaderLibrary.o: ../src/Render/ShaderLibrary.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Texture.o: ../src/Render/Texture.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VertexArray.o: ../src/Render/VertexArray.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VertexBuffer.o: ../src/Render/VertexBuffer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ImGUIBuild.o: ../src/UI/ImGUIBuild.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ImGUILayer.o: ../src/UI/ImGUILayer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/pch.o: ../src/pch.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/stb_image.o: ../vendor/stb_image/stb_image.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif