# Alternative GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug)
  Glad_config = debug
  ImGui_config = debug
  yaml_config = debug
  tinyfiledialogs_config = debug
  VersaLib_config = debug
  VersaEditor_config = debug

else ifeq ($(config),release)
  Glad_config = release
  ImGui_config = release
  yaml_config = release
  tinyfiledialogs_config = release
  VersaLib_config = release
  VersaEditor_config = release

else ifeq ($(config),dist)
  Glad_config = dist
  ImGui_config = dist
  yaml_config = dist
  tinyfiledialogs_config = dist
  VersaLib_config = dist
  VersaEditor_config = dist

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := Glad ImGui yaml tinyfiledialogs VersaLib VersaEditor

.PHONY: all clean help $(PROJECTS) Dependencies

all: $(PROJECTS)

Dependencies: Glad ImGui tinyfiledialogs yaml

Glad:
ifneq (,$(Glad_config))
	@echo "==== Building Glad ($(Glad_config)) ===="
	@${MAKE} --no-print-directory -C VersaLib/vendor -f Glad.make config=$(Glad_config)
endif

ImGui:
ifneq (,$(ImGui_config))
	@echo "==== Building ImGui ($(ImGui_config)) ===="
	@${MAKE} --no-print-directory -C VersaLib/vendor -f ImGui.make config=$(ImGui_config)
endif

yaml:
ifneq (,$(yaml_config))
	@echo "==== Building yaml ($(yaml_config)) ===="
	@${MAKE} --no-print-directory -C VersaLib/vendor -f yaml.make config=$(yaml_config)
endif

tinyfiledialogs:
ifneq (,$(tinyfiledialogs_config))
	@echo "==== Building tinyfiledialogs ($(tinyfiledialogs_config)) ===="
	@${MAKE} --no-print-directory -C VersaLib/vendor -f tinyfiledialogs.make config=$(tinyfiledialogs_config)
endif

VersaLib: Glad ImGui yaml tinyfiledialogs
ifneq (,$(VersaLib_config))
	@echo "==== Building VersaLib ($(VersaLib_config)) ===="
	@${MAKE} --no-print-directory -C VersaLib/VersaLib -f Makefile config=$(VersaLib_config)
endif

VersaEditor: VersaLib yaml tinyfiledialogs Glad ImGui
ifneq (,$(VersaEditor_config))
	@echo "==== Building VersaEditor ($(VersaEditor_config)) ===="
	@${MAKE} --no-print-directory -C VersaEditor/VersaEditor -f Makefile config=$(VersaEditor_config)
endif

clean:
	@${MAKE} --no-print-directory -C VersaLib/vendor -f Glad.make clean
	@${MAKE} --no-print-directory -C VersaLib/vendor -f ImGui.make clean
	@${MAKE} --no-print-directory -C VersaLib/vendor -f yaml.make clean
	@${MAKE} --no-print-directory -C VersaLib/vendor -f tinyfiledialogs.make clean
	@${MAKE} --no-print-directory -C VersaLib/VersaLib -f Makefile clean
	@${MAKE} --no-print-directory -C VersaEditor/VersaEditor -f Makefile clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug"
	@echo "  release"
	@echo "  dist"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   Glad"
	@echo "   ImGui"
	@echo "   yaml"
	@echo "   tinyfiledialogs"
	@echo "   VersaLib"
	@echo "   VersaEditor"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"